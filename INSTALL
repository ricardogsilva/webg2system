INSTALLING ON A NEW MACHINE:

- PYTHON THREADING BUG

    - Due to a bug in Python2.7 threading module that was only discovered
      after the release, the code must be manually patched. So, edit the file
      
      /usr/lib/python2.7/threading.py

      and add the following lines right after the def __stop(self) line #607:

      if not hasattr(self, '_Thread__block'):
          return


      for more info check out the original bug report in:
      http://bugs.python.org/issue14308


      After the editing, remove the threading.pyc file (it gets regenerated on first 
      usage).


- INSTALL DEPENDENCIES:

pip
django (through pip)
south (through pip)
pycountry (through pip)
pysftp (through pip)
ConcurrentLogHandler (through pip)
python-pexpect
python-pyparsing
python-lxml
python-tables
python-imaging
gdal-bin
python-gdal
python-mapscript
libapache2-mod-wsgi
cgi-mapserver
mapserver-bin
ttf-freefont

- Operations database

    The system is configured to use two different databases: 

        - One database for storing the various settings. This is an sqlite 
          database stored in the sqlite.db file.
        
        - Another database for logging the operations. This is also an sqlite
          database, stored in the operations_db.db file. This second database
          is not saved on the repository, it must be created in any new
          machine where the system is to be installed.
    
    Run the following commands:

        cd path_to_working_copy/webg2system
        python manage.py syncdb --database=operations_db

    For more information on using django-south with multiple databases check out:
http://stackoverflow.com/questions/7029228/is-using-multiple-databases-and-south-together-possible

- DJANGO SITE

    - copy the g2system.conf file from the apache directory to 
      /etc/apache2/sites-available and make the necessary adjustments 
      to the paths defined in the file

    - enable the site with 
        
        sudo a2ensiste g2system.conf

    - disable the default website

        sudo a2dissite 000-default

    - reload the webserver. There should be no errors or warnings reported.

        sudo service apache2 reload

    - alter the following configurations in the webg2system/settings.py file:

        STATIC_ROOT = '/home/geo5/webg2system/sitestatic'

    - create a new settings_local.py file by copying the already existent 
      template:

        cp settings_local.py.template settings_local.py

    - change the relevant settings inside the settings_local.py file to 
      reflect the correct paths.

    - run the collectstatic command

        python manage.py collectstatic

    - at this point, the django site should be accessible at (replace 
      geo5.meteo.pt with the actual host name)

        http://geo5.meteo.pt/g2system

- WSGI SETTINGS

    - Edit the g2system.conf file located in /etc/apache2/sites-available
      
      Adjust the WSGIDaemonProcess directive regarding the following:

        - processes: How many simultaneous processes to run in the wsgi 
          daemon mode
        - maximum-requests: How many simultanous requests should be accepted 
          by the server
        - threads: How many threads should be spawned from the allowed 
          processes

    A safe, however not very performant, configuration seems to be:

    - task executioner host for geotiff creation: 
        processes=1 maximum-requests=1 threads=1
    - webserver host: 
        processes=1 threads=1
        

- AUXILIARY WMS

    - copy the map and database files from the archive

        cd webg2system/aux_wms
        scp g2user@192.168.151.29:/media/Data3/geoland2/STATIC_INPUTS/geoland2_aux/geoland2_aux.map .
        scp g2user@192.168.151.29:/media/Data3/geoland2/STATIC_INPUTS/geoland2_aux/geoland2_db.sqlite .

    - make the necessary path adjustments to the geoland2_aux.map file, including:
        - SHAPEPATH
        - wms_onlineresource

    - copy the 'auxiliary' file in webg2system/apache/cgi-bin to 
      /usr/lib/cgi-bin and change the path to the mapfile in order to point 
      to the geoland2_aux.map file

- PERFORMANCE OF THE GEONETWORK DATABASE

    - Edit the /etc/postgresql/9.1/main/postgresql.conf file and set:

        max_pred_locks_per_transaction = 200



for monitoring apache2 logs:

tail -f /var/log/apache2/error.log
